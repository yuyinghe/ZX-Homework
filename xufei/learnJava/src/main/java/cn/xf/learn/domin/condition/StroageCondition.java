package cn.xf.learn.domin.condition;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class StroageCondition {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table stroage
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table stroage
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    protected String limit;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table stroage
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table stroage
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stroage
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public StroageCondition() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stroage
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stroage
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stroage
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public void setLimit(String limit) {
        this.limit = limit;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stroage
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public String getLimit() {
        return limit;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stroage
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stroage
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stroage
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stroage
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stroage
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stroage
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stroage
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stroage
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table stroage
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSLocationIsNull() {
            addCriterion("s_location is null");
            return (Criteria) this;
        }

        public Criteria andSLocationIsNotNull() {
            addCriterion("s_location is not null");
            return (Criteria) this;
        }

        public Criteria andSLocationEqualTo(String value) {
            addCriterion("s_location =", value, "sLocation");
            return (Criteria) this;
        }

        public Criteria andSLocationNotEqualTo(String value) {
            addCriterion("s_location <>", value, "sLocation");
            return (Criteria) this;
        }

        public Criteria andSLocationGreaterThan(String value) {
            addCriterion("s_location >", value, "sLocation");
            return (Criteria) this;
        }

        public Criteria andSLocationGreaterThanOrEqualTo(String value) {
            addCriterion("s_location >=", value, "sLocation");
            return (Criteria) this;
        }

        public Criteria andSLocationLessThan(String value) {
            addCriterion("s_location <", value, "sLocation");
            return (Criteria) this;
        }

        public Criteria andSLocationLessThanOrEqualTo(String value) {
            addCriterion("s_location <=", value, "sLocation");
            return (Criteria) this;
        }

        public Criteria andSLocationLike(String value) {
            addCriterion("s_location like", value, "sLocation");
            return (Criteria) this;
        }

        public Criteria andSLocationNotLike(String value) {
            addCriterion("s_location not like", value, "sLocation");
            return (Criteria) this;
        }

        public Criteria andSLocationIn(List<String> values) {
            addCriterion("s_location in", values, "sLocation");
            return (Criteria) this;
        }

        public Criteria andSLocationNotIn(List<String> values) {
            addCriterion("s_location not in", values, "sLocation");
            return (Criteria) this;
        }

        public Criteria andSLocationBetween(String value1, String value2) {
            addCriterion("s_location between", value1, value2, "sLocation");
            return (Criteria) this;
        }

        public Criteria andSLocationNotBetween(String value1, String value2) {
            addCriterion("s_location not between", value1, value2, "sLocation");
            return (Criteria) this;
        }

        public Criteria andSExistIsNull() {
            addCriterion("s_exist is null");
            return (Criteria) this;
        }

        public Criteria andSExistIsNotNull() {
            addCriterion("s_exist is not null");
            return (Criteria) this;
        }

        public Criteria andSExistEqualTo(Byte value) {
            addCriterion("s_exist =", value, "sExist");
            return (Criteria) this;
        }

        public Criteria andSExistNotEqualTo(Byte value) {
            addCriterion("s_exist <>", value, "sExist");
            return (Criteria) this;
        }

        public Criteria andSExistGreaterThan(Byte value) {
            addCriterion("s_exist >", value, "sExist");
            return (Criteria) this;
        }

        public Criteria andSExistGreaterThanOrEqualTo(Byte value) {
            addCriterion("s_exist >=", value, "sExist");
            return (Criteria) this;
        }

        public Criteria andSExistLessThan(Byte value) {
            addCriterion("s_exist <", value, "sExist");
            return (Criteria) this;
        }

        public Criteria andSExistLessThanOrEqualTo(Byte value) {
            addCriterion("s_exist <=", value, "sExist");
            return (Criteria) this;
        }

        public Criteria andSExistIn(List<Byte> values) {
            addCriterion("s_exist in", values, "sExist");
            return (Criteria) this;
        }

        public Criteria andSExistNotIn(List<Byte> values) {
            addCriterion("s_exist not in", values, "sExist");
            return (Criteria) this;
        }

        public Criteria andSExistBetween(Byte value1, Byte value2) {
            addCriterion("s_exist between", value1, value2, "sExist");
            return (Criteria) this;
        }

        public Criteria andSExistNotBetween(Byte value1, Byte value2) {
            addCriterion("s_exist not between", value1, value2, "sExist");
            return (Criteria) this;
        }

        public Criteria andSNameIsNull() {
            addCriterion("s_name is null");
            return (Criteria) this;
        }

        public Criteria andSNameIsNotNull() {
            addCriterion("s_name is not null");
            return (Criteria) this;
        }

        public Criteria andSNameEqualTo(String value) {
            addCriterion("s_name =", value, "sName");
            return (Criteria) this;
        }

        public Criteria andSNameNotEqualTo(String value) {
            addCriterion("s_name <>", value, "sName");
            return (Criteria) this;
        }

        public Criteria andSNameGreaterThan(String value) {
            addCriterion("s_name >", value, "sName");
            return (Criteria) this;
        }

        public Criteria andSNameGreaterThanOrEqualTo(String value) {
            addCriterion("s_name >=", value, "sName");
            return (Criteria) this;
        }

        public Criteria andSNameLessThan(String value) {
            addCriterion("s_name <", value, "sName");
            return (Criteria) this;
        }

        public Criteria andSNameLessThanOrEqualTo(String value) {
            addCriterion("s_name <=", value, "sName");
            return (Criteria) this;
        }

        public Criteria andSNameLike(String value) {
            addCriterion("s_name like", value, "sName");
            return (Criteria) this;
        }

        public Criteria andSNameNotLike(String value) {
            addCriterion("s_name not like", value, "sName");
            return (Criteria) this;
        }

        public Criteria andSNameIn(List<String> values) {
            addCriterion("s_name in", values, "sName");
            return (Criteria) this;
        }

        public Criteria andSNameNotIn(List<String> values) {
            addCriterion("s_name not in", values, "sName");
            return (Criteria) this;
        }

        public Criteria andSNameBetween(String value1, String value2) {
            addCriterion("s_name between", value1, value2, "sName");
            return (Criteria) this;
        }

        public Criteria andSNameNotBetween(String value1, String value2) {
            addCriterion("s_name not between", value1, value2, "sName");
            return (Criteria) this;
        }

        public Criteria andSDateIsNull() {
            addCriterion("s_date is null");
            return (Criteria) this;
        }

        public Criteria andSDateIsNotNull() {
            addCriterion("s_date is not null");
            return (Criteria) this;
        }

        public Criteria andSDateEqualTo(Date value) {
            addCriterionForJDBCDate("s_date =", value, "sDate");
            return (Criteria) this;
        }

        public Criteria andSDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("s_date <>", value, "sDate");
            return (Criteria) this;
        }

        public Criteria andSDateGreaterThan(Date value) {
            addCriterionForJDBCDate("s_date >", value, "sDate");
            return (Criteria) this;
        }

        public Criteria andSDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("s_date >=", value, "sDate");
            return (Criteria) this;
        }

        public Criteria andSDateLessThan(Date value) {
            addCriterionForJDBCDate("s_date <", value, "sDate");
            return (Criteria) this;
        }

        public Criteria andSDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("s_date <=", value, "sDate");
            return (Criteria) this;
        }

        public Criteria andSDateIn(List<Date> values) {
            addCriterionForJDBCDate("s_date in", values, "sDate");
            return (Criteria) this;
        }

        public Criteria andSDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("s_date not in", values, "sDate");
            return (Criteria) this;
        }

        public Criteria andSDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("s_date between", value1, value2, "sDate");
            return (Criteria) this;
        }

        public Criteria andSDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("s_date not between", value1, value2, "sDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table stroage
     *
     * @mbggenerated do_not_delete_during_merge Sun Mar 11 17:54:38 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table stroage
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}