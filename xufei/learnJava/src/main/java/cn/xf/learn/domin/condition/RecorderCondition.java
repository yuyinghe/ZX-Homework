package cn.xf.learn.domin.condition;

import java.util.ArrayList;
import java.util.List;

public class RecorderCondition {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table recorder
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table recorder
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    protected String limit;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table recorder
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table recorder
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recorder
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public RecorderCondition() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recorder
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recorder
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recorder
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public void setLimit(String limit) {
        this.limit = limit;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recorder
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public String getLimit() {
        return limit;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recorder
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recorder
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recorder
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recorder
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recorder
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recorder
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recorder
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table recorder
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table recorder
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andRNumberIsNull() {
            addCriterion("r_number is null");
            return (Criteria) this;
        }

        public Criteria andRNumberIsNotNull() {
            addCriterion("r_number is not null");
            return (Criteria) this;
        }

        public Criteria andRNumberEqualTo(Integer value) {
            addCriterion("r_number =", value, "rNumber");
            return (Criteria) this;
        }

        public Criteria andRNumberNotEqualTo(Integer value) {
            addCriterion("r_number <>", value, "rNumber");
            return (Criteria) this;
        }

        public Criteria andRNumberGreaterThan(Integer value) {
            addCriterion("r_number >", value, "rNumber");
            return (Criteria) this;
        }

        public Criteria andRNumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("r_number >=", value, "rNumber");
            return (Criteria) this;
        }

        public Criteria andRNumberLessThan(Integer value) {
            addCriterion("r_number <", value, "rNumber");
            return (Criteria) this;
        }

        public Criteria andRNumberLessThanOrEqualTo(Integer value) {
            addCriterion("r_number <=", value, "rNumber");
            return (Criteria) this;
        }

        public Criteria andRNumberIn(List<Integer> values) {
            addCriterion("r_number in", values, "rNumber");
            return (Criteria) this;
        }

        public Criteria andRNumberNotIn(List<Integer> values) {
            addCriterion("r_number not in", values, "rNumber");
            return (Criteria) this;
        }

        public Criteria andRNumberBetween(Integer value1, Integer value2) {
            addCriterion("r_number between", value1, value2, "rNumber");
            return (Criteria) this;
        }

        public Criteria andRNumberNotBetween(Integer value1, Integer value2) {
            addCriterion("r_number not between", value1, value2, "rNumber");
            return (Criteria) this;
        }

        public Criteria andRNameIsNull() {
            addCriterion("r_name is null");
            return (Criteria) this;
        }

        public Criteria andRNameIsNotNull() {
            addCriterion("r_name is not null");
            return (Criteria) this;
        }

        public Criteria andRNameEqualTo(Integer value) {
            addCriterion("r_name =", value, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameNotEqualTo(Integer value) {
            addCriterion("r_name <>", value, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameGreaterThan(Integer value) {
            addCriterion("r_name >", value, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameGreaterThanOrEqualTo(Integer value) {
            addCriterion("r_name >=", value, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameLessThan(Integer value) {
            addCriterion("r_name <", value, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameLessThanOrEqualTo(Integer value) {
            addCriterion("r_name <=", value, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameIn(List<Integer> values) {
            addCriterion("r_name in", values, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameNotIn(List<Integer> values) {
            addCriterion("r_name not in", values, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameBetween(Integer value1, Integer value2) {
            addCriterion("r_name between", value1, value2, "rName");
            return (Criteria) this;
        }

        public Criteria andRNameNotBetween(Integer value1, Integer value2) {
            addCriterion("r_name not between", value1, value2, "rName");
            return (Criteria) this;
        }

        public Criteria andRBooknameIsNull() {
            addCriterion("r_bookName is null");
            return (Criteria) this;
        }

        public Criteria andRBooknameIsNotNull() {
            addCriterion("r_bookName is not null");
            return (Criteria) this;
        }

        public Criteria andRBooknameEqualTo(String value) {
            addCriterion("r_bookName =", value, "rBookname");
            return (Criteria) this;
        }

        public Criteria andRBooknameNotEqualTo(String value) {
            addCriterion("r_bookName <>", value, "rBookname");
            return (Criteria) this;
        }

        public Criteria andRBooknameGreaterThan(String value) {
            addCriterion("r_bookName >", value, "rBookname");
            return (Criteria) this;
        }

        public Criteria andRBooknameGreaterThanOrEqualTo(String value) {
            addCriterion("r_bookName >=", value, "rBookname");
            return (Criteria) this;
        }

        public Criteria andRBooknameLessThan(String value) {
            addCriterion("r_bookName <", value, "rBookname");
            return (Criteria) this;
        }

        public Criteria andRBooknameLessThanOrEqualTo(String value) {
            addCriterion("r_bookName <=", value, "rBookname");
            return (Criteria) this;
        }

        public Criteria andRBooknameLike(String value) {
            addCriterion("r_bookName like", value, "rBookname");
            return (Criteria) this;
        }

        public Criteria andRBooknameNotLike(String value) {
            addCriterion("r_bookName not like", value, "rBookname");
            return (Criteria) this;
        }

        public Criteria andRBooknameIn(List<String> values) {
            addCriterion("r_bookName in", values, "rBookname");
            return (Criteria) this;
        }

        public Criteria andRBooknameNotIn(List<String> values) {
            addCriterion("r_bookName not in", values, "rBookname");
            return (Criteria) this;
        }

        public Criteria andRBooknameBetween(String value1, String value2) {
            addCriterion("r_bookName between", value1, value2, "rBookname");
            return (Criteria) this;
        }

        public Criteria andRBooknameNotBetween(String value1, String value2) {
            addCriterion("r_bookName not between", value1, value2, "rBookname");
            return (Criteria) this;
        }

        public Criteria andRBorrowIsNull() {
            addCriterion("r_borrow is null");
            return (Criteria) this;
        }

        public Criteria andRBorrowIsNotNull() {
            addCriterion("r_borrow is not null");
            return (Criteria) this;
        }

        public Criteria andRBorrowEqualTo(Integer value) {
            addCriterion("r_borrow =", value, "rBorrow");
            return (Criteria) this;
        }

        public Criteria andRBorrowNotEqualTo(Integer value) {
            addCriterion("r_borrow <>", value, "rBorrow");
            return (Criteria) this;
        }

        public Criteria andRBorrowGreaterThan(Integer value) {
            addCriterion("r_borrow >", value, "rBorrow");
            return (Criteria) this;
        }

        public Criteria andRBorrowGreaterThanOrEqualTo(Integer value) {
            addCriterion("r_borrow >=", value, "rBorrow");
            return (Criteria) this;
        }

        public Criteria andRBorrowLessThan(Integer value) {
            addCriterion("r_borrow <", value, "rBorrow");
            return (Criteria) this;
        }

        public Criteria andRBorrowLessThanOrEqualTo(Integer value) {
            addCriterion("r_borrow <=", value, "rBorrow");
            return (Criteria) this;
        }

        public Criteria andRBorrowIn(List<Integer> values) {
            addCriterion("r_borrow in", values, "rBorrow");
            return (Criteria) this;
        }

        public Criteria andRBorrowNotIn(List<Integer> values) {
            addCriterion("r_borrow not in", values, "rBorrow");
            return (Criteria) this;
        }

        public Criteria andRBorrowBetween(Integer value1, Integer value2) {
            addCriterion("r_borrow between", value1, value2, "rBorrow");
            return (Criteria) this;
        }

        public Criteria andRBorrowNotBetween(Integer value1, Integer value2) {
            addCriterion("r_borrow not between", value1, value2, "rBorrow");
            return (Criteria) this;
        }

        public Criteria andRReturnIsNull() {
            addCriterion("r_return is null");
            return (Criteria) this;
        }

        public Criteria andRReturnIsNotNull() {
            addCriterion("r_return is not null");
            return (Criteria) this;
        }

        public Criteria andRReturnEqualTo(Integer value) {
            addCriterion("r_return =", value, "rReturn");
            return (Criteria) this;
        }

        public Criteria andRReturnNotEqualTo(Integer value) {
            addCriterion("r_return <>", value, "rReturn");
            return (Criteria) this;
        }

        public Criteria andRReturnGreaterThan(Integer value) {
            addCriterion("r_return >", value, "rReturn");
            return (Criteria) this;
        }

        public Criteria andRReturnGreaterThanOrEqualTo(Integer value) {
            addCriterion("r_return >=", value, "rReturn");
            return (Criteria) this;
        }

        public Criteria andRReturnLessThan(Integer value) {
            addCriterion("r_return <", value, "rReturn");
            return (Criteria) this;
        }

        public Criteria andRReturnLessThanOrEqualTo(Integer value) {
            addCriterion("r_return <=", value, "rReturn");
            return (Criteria) this;
        }

        public Criteria andRReturnIn(List<Integer> values) {
            addCriterion("r_return in", values, "rReturn");
            return (Criteria) this;
        }

        public Criteria andRReturnNotIn(List<Integer> values) {
            addCriterion("r_return not in", values, "rReturn");
            return (Criteria) this;
        }

        public Criteria andRReturnBetween(Integer value1, Integer value2) {
            addCriterion("r_return between", value1, value2, "rReturn");
            return (Criteria) this;
        }

        public Criteria andRReturnNotBetween(Integer value1, Integer value2) {
            addCriterion("r_return not between", value1, value2, "rReturn");
            return (Criteria) this;
        }

        public Criteria andRShouldreturnIsNull() {
            addCriterion("r_shouldReturn is null");
            return (Criteria) this;
        }

        public Criteria andRShouldreturnIsNotNull() {
            addCriterion("r_shouldReturn is not null");
            return (Criteria) this;
        }

        public Criteria andRShouldreturnEqualTo(Integer value) {
            addCriterion("r_shouldReturn =", value, "rShouldreturn");
            return (Criteria) this;
        }

        public Criteria andRShouldreturnNotEqualTo(Integer value) {
            addCriterion("r_shouldReturn <>", value, "rShouldreturn");
            return (Criteria) this;
        }

        public Criteria andRShouldreturnGreaterThan(Integer value) {
            addCriterion("r_shouldReturn >", value, "rShouldreturn");
            return (Criteria) this;
        }

        public Criteria andRShouldreturnGreaterThanOrEqualTo(Integer value) {
            addCriterion("r_shouldReturn >=", value, "rShouldreturn");
            return (Criteria) this;
        }

        public Criteria andRShouldreturnLessThan(Integer value) {
            addCriterion("r_shouldReturn <", value, "rShouldreturn");
            return (Criteria) this;
        }

        public Criteria andRShouldreturnLessThanOrEqualTo(Integer value) {
            addCriterion("r_shouldReturn <=", value, "rShouldreturn");
            return (Criteria) this;
        }

        public Criteria andRShouldreturnIn(List<Integer> values) {
            addCriterion("r_shouldReturn in", values, "rShouldreturn");
            return (Criteria) this;
        }

        public Criteria andRShouldreturnNotIn(List<Integer> values) {
            addCriterion("r_shouldReturn not in", values, "rShouldreturn");
            return (Criteria) this;
        }

        public Criteria andRShouldreturnBetween(Integer value1, Integer value2) {
            addCriterion("r_shouldReturn between", value1, value2, "rShouldreturn");
            return (Criteria) this;
        }

        public Criteria andRShouldreturnNotBetween(Integer value1, Integer value2) {
            addCriterion("r_shouldReturn not between", value1, value2, "rShouldreturn");
            return (Criteria) this;
        }

        public Criteria andRMacIsNull() {
            addCriterion("r_mac is null");
            return (Criteria) this;
        }

        public Criteria andRMacIsNotNull() {
            addCriterion("r_mac is not null");
            return (Criteria) this;
        }

        public Criteria andRMacEqualTo(Integer value) {
            addCriterion("r_mac =", value, "rMac");
            return (Criteria) this;
        }

        public Criteria andRMacNotEqualTo(Integer value) {
            addCriterion("r_mac <>", value, "rMac");
            return (Criteria) this;
        }

        public Criteria andRMacGreaterThan(Integer value) {
            addCriterion("r_mac >", value, "rMac");
            return (Criteria) this;
        }

        public Criteria andRMacGreaterThanOrEqualTo(Integer value) {
            addCriterion("r_mac >=", value, "rMac");
            return (Criteria) this;
        }

        public Criteria andRMacLessThan(Integer value) {
            addCriterion("r_mac <", value, "rMac");
            return (Criteria) this;
        }

        public Criteria andRMacLessThanOrEqualTo(Integer value) {
            addCriterion("r_mac <=", value, "rMac");
            return (Criteria) this;
        }

        public Criteria andRMacIn(List<Integer> values) {
            addCriterion("r_mac in", values, "rMac");
            return (Criteria) this;
        }

        public Criteria andRMacNotIn(List<Integer> values) {
            addCriterion("r_mac not in", values, "rMac");
            return (Criteria) this;
        }

        public Criteria andRMacBetween(Integer value1, Integer value2) {
            addCriterion("r_mac between", value1, value2, "rMac");
            return (Criteria) this;
        }

        public Criteria andRMacNotBetween(Integer value1, Integer value2) {
            addCriterion("r_mac not between", value1, value2, "rMac");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table recorder
     *
     * @mbggenerated do_not_delete_during_merge Sun Mar 11 17:54:38 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table recorder
     *
     * @mbggenerated Sun Mar 11 17:54:38 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}