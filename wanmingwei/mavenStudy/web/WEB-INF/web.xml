<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <!-- 这个web.xml相当于程序入口 就不再有psvm了 启动tomcat会加载此xml文件 -->
    <!-- 一个servlet 对应一个  servlet-mapping-->
    <!--相当于监听器 当用户有请求时，服务器程序拿到这程序，再把请求交给服务器容器里面的程序处理-->
    <!-- tomcat新建一个servlet，可以有多个servlet -->
    <servlet>
        <!-- 下面又是服务器容器里面的程序的一道门，负责交给相应类来处理相应事务 -->
        <servlet-name>DispatcherServlet</servlet-name>
        <!--servlet实例化-->
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--servlet参数 初始化servlet用的-->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <!--让spring mvc去启动spring-->
            <param-value>classpath*:applicationContext.xml</param-value>
        </init-param>
        <!--此servlet优先级为1-->
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!--servlet映射-->
    <servlet-mapping>
        <!-- 指定接受到的请求映射到名字为DispatcherServlet的servlet去 -->
        <servlet-name>DispatcherServlet</servlet-name>
        <!--/ 代表根，即所有，所有请求都交给DispatcherServlet处理-->
        <!-- 这里是指定请求类型 范围 -->
        <url-pattern>/*</url-pattern>
    </servlet-mapping>

    <!--过滤器 编码指定为utf8-->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
</web-app>