<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <!--监听用户的请求，用户请求先发送到tomcat，监听器监听到请求以后，让tomcat把请求发送给java-->
    <servlet>
        <!--整个网络工程程序的入口,创建一个为处理用户请求的程序，Dispatcher是收发调度的意思，
        下面这个name是我们自己创建的名字-->
        <servlet-name>DispatcherServlet1</servlet-name>
        <!--创建一个实例,DispatcherSelvlert是系统框架中已经存在的一个class，创建它的实例-->
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--创建实例的过程中，初始化构造方法的参数-->
        <init-param>
            <!--参数的名称-->
            <param-name>contextConfigLocation</param-name>
            <!--参数的值是spring框架的配置文件(applicationContext.xml)的路径,构造实例的过程通过传参
            达到了启动spring框架的目的-->
            <param-value>classpath*:applicationContext.xml</param-value>
        </init-param>
        <!--设置1表示此服务程序是交给他第一个处理-->
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!--mapping表示映射-->
    <servlet-mapping>
        <servlet-name>DispatcherServlet1</servlet-name>
        <!--，所有的请求到达后台会去掉前面的url网址，剩下的斜杠,星号代表所以/开头的代表根目录，请求都交给DispatcherServlet-->
        <url-pattern>/*</url-pattern>
    </servlet-mapping>

    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
</web-app>